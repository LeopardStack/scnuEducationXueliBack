<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scnujxjy.backendpoint.dao.mapper.core_data.PaymentInfoMapper">
    <sql id="commonJoin">
        FROM payment_info pi
        LEFT JOIN student_status ss ON ss.student_number = pi.student_number
        LEFT JOIN class_information ci ON ss.class_identifier = ci.class_identifier
        LEFT JOIN teaching_point_information tpi
        ON (ci.class_name = '校内' AND tpi.teaching_point_name = ci.college)
        OR (ci.class_name != '校内' AND tpi.alias = REGEXP_REPLACE(ci.class_name, '\\d', ''))
    </sql>

    <sql id="commonJoinForNewStudent">
        FROM payment_info pi
        LEFT JOIN admission_information ai ON ai.grade = pi.grade AND ai.admission_number = pi.admission_number
        LEFT JOIN major_information mi ON mi.grade = ai.grade AND mi.admission_major_code = ai.major_code
        LEFT JOIN college_information ci ON ci.college_id = mi.college_id
        LEFT JOIN teaching_point_information ti ON ti.teaching_point_id = mi.teaching_point_id
    </sql>

    <sql id="commonJoinForNewStudentNotPay">
        FROM admission_information ai
        LEFT JOIN personal_info pi1 ON ai.grade = pi1.grade and ai.id_card_number=pi1.id_number
        LEFT JOIN payment_info pi ON ai.grade = pi.grade AND ai.admission_number = pi.admission_number
        LEFT JOIN major_information mi ON mi.grade = ai.grade AND mi.admission_major_code = ai.major_code
        LEFT JOIN college_information ci ON ci.college_id = mi.college_id
        LEFT JOIN teaching_point_information ti ON ti.teaching_point_id = mi.teaching_point_id
    </sql>

    <sql id="commonFilters">
        <if test='entity.id != null'>
            AND pi.id = #{entity.id}
        </if>
        <if test='entity.studentNumber != null'>
            AND pi.student_number = #{entity.studentNumber}
        </if>
        <if test='entity.admissionNumber != null'>
            AND pi.admission_number = #{entity.admissionNumber}
        </if>
        <if test='entity.name != null'>
            AND pi.name = #{entity.name}
        </if>
        <if test='entity.remark != null'>
            AND pi.remark = #{entity.remark}
        </if>
        <if test='entity.idCardNumber != null'>
            AND pi.id_card_number = #{entity.idCardNumber}
        </if>
        <if test='entity.level != null'>
            AND ss.level = #{entity.level}
        </if>
        <if test='entity.studyForm != null'>
            AND ss.study_form = #{entity.studyForm}
        </if>
        <if test='entity.paymentBeginDate != null'>
            AND DATE(pi.payment_date) >= DATE(#{entity.paymentBeginDate})
        </if>
        <if test='entity.paymentEndDate != null'>
            AND DATE(pi.payment_date) &lt;= DATE(#{entity.paymentEndDate})
        </if>
        <if test='entity.paymentDate != null'>
            AND DATE(pi.payment_date) = DATE(#{entity.paymentDate})
        </if>
        <if test='entity.paymentCategory != null'>
            AND pi.payment_category = #{entity.paymentCategory}
        </if>
        <if test='entity.academicYear != null'>
            AND pi.academic_year = #{entity.academicYear}
        </if>
        <if test='entity.paymentType != null'>
            AND pi.payment_type = #{entity.paymentType}
        </if>
        <if test='entity.isPaid != null'>
            AND pi.is_paid = #{entity.isPaid}
        </if>
        <if test='entity.paymentMethod != null'>
            AND pi.payment_method = #{entity.paymentMethod}
        </if>
        <if test='entity.college != null'>
            AND ci.college = #{entity.college}
        </if>
        <if test='entity.className != null'>
            AND ci.class_name = #{entity.className}
        </if>
        <if test='entity.teachingPoint != null'>
            AND ci.class_name LIKE CONCAT(#{entity.teachingPoint}, '%')
        </if>
        <if test='entity.grade != null'>
            AND pi.grade = #{entity.grade}
        </if>
        <if test='entity.classNameSet != null and entity.classNameSet.size() > 0'>
            AND (
            <foreach collection="entity.classNameSet" item="className" separator=" OR ">
                ci.class_name LIKE CONCAT('%', #{className}, '%')
            </foreach>
            )
        </if>

    </sql>


    <sql id="commonFiltersForNewStudent">
        <if test='entity.id != null'>
            AND pi.id = #{entity.id}
        </if>
        <if test='entity.admissionNumber != null'>
            AND pi.admission_number = #{entity.admissionNumber}
        </if>
        <if test='entity.name != null'>
            AND pi.name = #{entity.name}
        </if>
        <if test='entity.idCardNumber != null'>
            AND pi.id_card_number = #{entity.idCardNumber}
        </if>
        <if test='entity.level != null'>
            AND ai.level = #{entity.level}
        </if>
        <if test='entity.studyForm != null'>
            AND ai.study_form = #{entity.studyForm}
        </if>
        <if test='entity.paymentBeginDate != null'>
            AND DATE(pi.payment_date) >= DATE(#{entity.paymentBeginDate})
        </if>
        <if test='entity.paymentEndDate != null'>
            AND DATE(pi.payment_date) &lt;= DATE(#{entity.paymentEndDate})
        </if>
        <if test='entity.paymentDate != null'>
            AND DATE(pi.payment_date) = DATE(#{entity.paymentDate})
        </if>
        <if test='entity.paymentCategory != null'>
            AND pi.payment_category = #{entity.paymentCategory}
        </if>
        <if test='entity.academicYear != null'>
            AND pi.academic_year = #{entity.academicYear}
        </if>
        <if test='entity.paymentType != null'>
            AND pi.payment_type = #{entity.paymentType}
        </if>
        <if test='entity.isPaid != null'>
            AND pi.is_paid = #{entity.isPaid}
        </if>
        <if test='entity.paymentMethod != null'>
            AND pi.payment_method = #{entity.paymentMethod}
        </if>
        <if test='entity.college != null'>
            AND ci.college_name = #{entity.college}
        </if>
        <if test='entity.teachingPoint != null'>
            AND ti.teaching_point_name = #{entity.teachingPoint}
        </if>
        <if test='entity.grade != null'>
            AND ai.grade = #{entity.grade}
        </if>
        AND ai.id is not NULL
    </sql>

    <select id="getCountStudentPayInfoByFilter" resultType="Long">
        SELECT COUNT(*)
        <include refid="commonJoin"/>
        WHERE 1=1
        <include refid="commonFilters"/>
    </select>

    <select id="getStudentPayInfoByFilter" resultType="com.scnujxjy.backendpoint.model.vo.core_data.PaymentInfoVO">
        SELECT pi.*, ci.class_name, ss.college, ss.grade, ss.study_form, ss.level, ss.major_name
        <include refid="commonJoin"/>
        WHERE 1=1
        <include refid="commonFilters"/>
        ORDER BY
        CASE
        WHEN pi.grade REGEXP '^[0-9]+$' THEN 1
        ELSE 2
        END,
        pi.grade+0 DESC,
        pi.payment_date DESC
        LIMIT #{l}, #{pageSize}
    </select>

    <select id="downloadPaymentInfoDataByManager0"
            resultType="com.scnujxjy.backendpoint.model.vo.core_data.PaymentInfoAllVO">
        SELECT pi.*, ci.class_name, ss.college, ss.grade, ss.study_form, ss.level, REGEXP_REPLACE(ci.class_name,
        '\\d+$', '') AS teachingPoint

        <include refid="commonJoin"/>
        WHERE 1=1
        <include refid="commonFilters"/>
    </select>

    <select id="getDistinctAcademicYears" resultType="String">
        SELECT DISTINCT ci.study_period
        <include refid="commonJoin"/>
        WHERE 1=1
        <include refid="commonFilters"/>
    </select>

    <select id="getTeachingPointStudentPayInfoByFilter"
            resultType="com.scnujxjy.backendpoint.model.vo.core_data.PaymentInfoVO">
        SELECT pi.*, ci.class_name, ss.college, ss.grade, ss.study_form, ss.level
        <include refid="commonJoin"/>
        WHERE 1=1
        <include refid="commonFilters"/>
        LIMIT #{l}, #{pageSize}
    </select>

    <select id="getTeachingPointStudentPayInfoByFilterCount"
            resultType="Long">
        SELECT COUNT(*)
        <include refid="commonJoin"/>
        WHERE 1=1
        <include refid="commonFilters"/>
    </select>
    <select id="getDistinctGrades" resultType="java.lang.String">
        SELECT DISTINCT pi.grade
        <include refid="commonJoin"/>
        WHERE 1=1
        <include refid="commonFilters"/>
        ORDER BY
        CASE
        WHEN pi.grade REGEXP '^[0-9]+$' THEN 1
        ELSE 2
        END,
        pi.grade+0 DESC
    </select>
    <select id="getDistinctLevels" resultType="java.lang.String">
        SELECT DISTINCT ci.level
        <include refid="commonJoin"/>
        WHERE 1=1
        <include refid="commonFilters"/>
    </select>
    <select id="getDistinctStudyForms" resultType="java.lang.String">
        SELECT DISTINCT ci.study_form
        <include refid="commonJoin"/>
        WHERE 1=1
        <include refid="commonFilters"/>
    </select>
    <select id="getDistinctClassNames" resultType="java.lang.String">
        SELECT DISTINCT ci.class_name
        <include refid="commonJoin"/>
        WHERE 1=1
        <include refid="commonFilters"/>
    </select>
    <select id="getDistinctTeachingPoints" resultType="java.lang.String">
        SELECT DISTINCT tpi.teaching_point_name
        <include refid="commonJoin"/>
        WHERE 1=1
        <include refid="commonFilters"/>
    </select>
    <select id="getDistinctCollegeNames" resultType="java.lang.String">
        SELECT DISTINCT ci.college
        <include refid="commonJoin"/>
        WHERE 1=1
        <include refid="commonFilters"/>
    </select>
    <select id="getDistinctRemarks" resultType="java.lang.String">
        SELECT DISTINCT pi.remark
        <include refid="commonJoin"/>
        WHERE 1=1
        <include refid="commonFilters"/>
    </select>

    <select id="getNewStudentPayInfoByFilter"
            resultType="com.scnujxjy.backendpoint.model.vo.core_data.PaymentInfoVO">
        SELECT pi.*, ti.teaching_point_name, ci.college_name, ai.grade, ai.study_form, ai.level, ai.major_name
        <include refid="commonJoinForNewStudent"/>
        WHERE 1=1
        <include refid="commonFiltersForNewStudent"/>
        ORDER BY
        pi.payment_date DESC, pi.id ASC
        LIMIT #{l}, #{pageSize}
    </select>
    <select id="getCountNewStudentPayInfoByFilter" resultType="java.lang.Long">
        SELECT COUNT(*)
        <include refid="commonJoinForNewStudent"/>
        WHERE 1=1
        <include refid="commonFiltersForNewStudent"/>
    </select>
    <select id="getDistinctNewStudentGrades" resultType="java.lang.String">
        SELECT DISTINCT ai.grade
        <include refid="commonJoinForNewStudent"/>
        WHERE 1=1
        <include refid="commonFiltersForNewStudent"/>
        ORDER BY ai.grade DESC
    </select>
    <select id="getDistinctNewStudentLevels" resultType="java.lang.String">
        SELECT DISTINCT ai.level
        <include refid="commonJoinForNewStudent"/>
        WHERE 1=1
        <include refid="commonFiltersForNewStudent"/>
    </select>
    <select id="getDistinctNewStudentStudyForms" resultType="java.lang.String">
        SELECT DISTINCT ai.study_form
        <include refid="commonJoinForNewStudent"/>
        WHERE 1=1
        <include refid="commonFiltersForNewStudent"/>
    </select>
    <select id="getDistinctNewStudentTeachingPoints" resultType="java.lang.String">
        SELECT DISTINCT ti.teaching_point_name
        <include refid="commonJoinForNewStudent"/>
        WHERE 1=1
        <include refid="commonFiltersForNewStudent"/>
    </select>
    <select id="getDistinctNewStudentCollegeNames" resultType="java.lang.String">
        SELECT DISTINCT ci.college_name
        <include refid="commonJoinForNewStudent"/>
        WHERE 1=1
        <include refid="commonFiltersForNewStudent"/>
    </select>
    <select id="exportNewStudentPayInfoByFilter"
            resultType="com.scnujxjy.backendpoint.model.vo.core_data.NewStudentPaymentInfoExcelVO">
        SELECT pi.*, ti.teaching_point_name, ci.college_name, ai.grade, ai.study_form, ai.level, ai.major_name
        <include refid="commonJoinForNewStudent"/>
        WHERE 1=1
        <include refid="commonFiltersForNewStudent"/>
    </select>

    <select id="exportNewStudentNotPayInfoByFilter"
            resultType="com.scnujxjy.backendpoint.model.vo.core_data.NewStudentNotPayExcelVO">
        SELECT ai.*, ti.teaching_point_name, ci.college_name, mi.tuition, mi.payment_type, mi.admission_type,
        pi1.phone_number, pi1.address as student_address
        <include refid="commonJoinForNewStudentNotPay"/>
        WHERE pi.id IS NULL
        <include refid="commonFiltersForNewStudent"/>
    </select>
    <select id="getDistinctNewStudentMajorNames" resultType="java.lang.String">
        SELECT DISTINCT mi.major_name
        <include refid="commonJoinForNewStudent"/>
        WHERE 1=1
        <include refid="commonFiltersForNewStudent"/>
    </select>
    <select id="getDistinctMajorNames" resultType="java.lang.String">
        SELECT DISTINCT ss.major_name

        <include refid="commonJoin"/>
        WHERE 1=1
        <include refid="commonFilters"/>
    </select>



</mapper>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scnujxjy.backendpoint.dao.mapper.courses_learning.CoursesLearningMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.scnujxjy.backendpoint.dao.entity.courses_learning.CoursesLearningPO">
        <id column="id" property="id" />
        <result column="grade" property="grade" />
        <result column="course_name" property="courseName" />
        <result column="course_type" property="courseType" />
        <result column="course_description" property="courseDescription" />
        <result column="course_cover_url" property="courseCoverUrl" />
        <result column="default_main_teacher_id" property="defaultMainTeacherId" />
        <result column="course_identifier" property="courseIdentifier" />
        <result column="valid" property="valid" />
        <result column="created_time" property="createdTime" />
        <result column="updated_time" property="updatedTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, grade, course_name, course_type, course_description, course_cover_url, default_main_teacher_id, course_identifier, valid, created_time, updated_time
    </sql>



    <sql id="commonJoin">
        FROM
        courses_learning cl
        INNER JOIN
        sections ss ON cl.id = ss.course_id
        INNER JOIN
        live_resources lr ON lr.course_id = cl.id AND lr.section_id is NULL
        INNER JOIN
        courses_class_mapping ccm ON cl.id = ccm.course_id
        INNER JOIN
        class_information ci ON ccm.class_identifier = ci.class_identifier
        INNER JOIN teaching_point_information tpi
        ON REGEXP_REPLACE(ci.class_name, '\\d', '') = tpi.alias
        INNER JOIN
        teacher_information ti ON cl.default_main_teacher_username = ti.teacher_username
    </sql>

    <sql id="courseLearningStudentsInfoJoin">
        FROM courses_learning cl
        INNER JOIN courses_class_mapping ccm ON cl.id=ccm.course_id
        INNER JOIN class_information ci ON ccm.class_identifier=ci.class_identifier
        INNER JOIN student_status ss ON ss.class_identifier=ci.class_identifier
        INNER JOIN personal_info pi ON pi.grade=ss.grade AND pi.id_number=ss.id_number
        INNER JOIN teaching_point_information tpi
        ON REGEXP_REPLACE(ci.class_name, '\\d', '') = tpi.alias
    </sql>

    <sql id="courseLearningRetakeStudentsInfoJoin">
        FROM courses_learning cl
        INNER JOIN retake_students rs ON cl.id=rs.course_id
        INNER JOIN student_status ss ON rs.student_number=ss.student_number
        INNER JOIN class_information ci ON ss.class_identifier=ci.class_identifier
        INNER JOIN personal_info pi ON pi.grade=ss.grade AND pi.id_number=ss.id_number
        INNER JOIN teaching_point_information tpi
        ON REGEXP_REPLACE(ci.class_name, '\\d', '') = tpi.alias
    </sql>


    <sql id="commonFilters">
        <if test='entity.id != null'>AND cl.id = #{entity.id}</if>
        <!-- 检查 courseIds 集合是否不为空，并且包含元素 -->
        <if test="entity.courseIds != null and !entity.courseIds.isEmpty()">
            AND cl.id IN
            <foreach collection="entity.courseIds" item="courseId" open="(" separator="," close=")">
                #{courseId}
            </foreach>
        </if>
        <if test="entity.classNameSet != null and !entity.classNameSet.isEmpty()">
            AND ci.class_name IN
            <foreach collection="entity.classNameSet" item="className" open="(" separator="," close=")">
                #{className}
            </foreach>
        </if>
        <if test='entity.grade != null'>AND ci.grade = #{entity.grade}</if>
        <if test='entity.college != null'>AND ci.college = #{entity.college}</if>
        <if test='entity.majorName != null'>AND ci.major_name = #{entity.majorName}</if>
        <if test='entity.studyForm != null'>AND ci.study_form = #{entity.studyForm}</if>
        <if test='entity.level != null'>AND ci.level = #{entity.level}</if>
        <if test='entity.courseName != null'>AND cl.course_name = #{entity.courseName}</if>
        <if test='entity.courseType != null'>AND cl.course_type = #{entity.courseType}</if>
        <if test='entity.mainTeacherName != null'>AND ti.name = #{entity.mainTeacherName}</if>
        <if test='entity.teachingPointName != null'>AND tpi.teaching_point_name = #{entity.teachingPointName}</if>
        <if test='entity.defaultMainTeacherUsername != null'>AND cl.default_main_teacher_username = #{entity.defaultMainTeacherUsername}</if>

        <if test='entity.courseStartTime != null'>AND ss.start_time >= #{entity.courseStartTime}</if>
        <if test='entity.courseEndTime != null'>AND #{entity.courseEndTime} >= ss.start_time</if>
    </sql>


    <!--    获取不同角色输入下的课程学习信息  -->
    <select id="selectCourseLearningData"
                                  resultType="com.scnujxjy.backendpoint.model.vo.course_learning.CourseLearningVO">
        SELECT
        cl.id,
        GROUP_CONCAT(DISTINCT ci.grade) AS grades,
        GROUP_CONCAT(DISTINCT ci.college) AS colleges,
        GROUP_CONCAT(DISTINCT ci.major_name) AS majorNames,
        cl.course_name,
        cl.course_type,
        cl.course_description,
        cl.course_cover_url,
        cl.default_main_teacher_username,
        cl.course_identifier,
        cl.valid,
        cl.created_time,
        tpi.teaching_point_name,
        lr.channel_id,
        cl.updated_time,
        ti.name AS default_main_teacher_name,
        GROUP_CONCAT(DISTINCT ci.class_name) AS classNames,
        COALESCE(
        MIN(CASE WHEN ss.start_time > NOW() THEN ss.start_time END),
        MAX(CASE WHEN NOW() > ss.start_time  THEN ss.start_time END)
        ) AS recent_course_schedule_time
        <include refid="commonJoin" />
        WHERE
        1=1
        <include refid="commonFilters" />
        GROUP BY
        cl.id, ci.grade, cl.course_name, cl.course_type, cl.course_description,
        cl.course_cover_url, cl.default_main_teacher_username, cl.course_identifier,
        cl.valid, cl.created_time, cl.updated_time, ti.name, ci.college, ci.major_name,
        lr.channel_id, tpi.teaching_point_name
        ORDER BY
        cl.created_time DESC
        LIMIT
        #{pageNumber}, #{pageSize}
    </select>


    <select id="getCourseSectionsData"
            resultType="com.scnujxjy.backendpoint.model.bo.course_learning.CourseRecordBO">
        SELECT cl.id,
               cl.grade, cl.course_name, cl.course_type, cl.course_description, cl.course_cover_url,
               cl.default_main_teacher_username, cl.course_identifier, cl.valid, cl.created_time,
               cl.updated_time, ss.parent_section_id, ss.section_name, ss.sequence, ss.content_type,
               ss.main_teacher_username, ss.deadline, ss.start_time, ss.valid AS section_valid,
               ccm.class_identifier, ci.grade AS class_grade, ci.class_name, ci.study_form,
               ci.level, ci.study_period, ci.college, ci.major_name, ci.major_code, ci.tuition,
               ti.name, ci.college, ci.major_name, lr.channel_id
        <include refid="commonJoin" />
    </select>


    <sql id="courseStudentInfoFilter">
        <if test='entity.courseId != null'>AND cl.id = #{entity.courseId}</if>
        <if test='entity.grade != null'>AND ci.grade = #{entity.grade}</if>
        <if test='entity.college != null'>AND ci.college = #{entity.college}</if>
        <if test='entity.majorName != null'>AND ci.major_name = #{entity.majorName}</if>
        <if test='entity.studyForm != null'>AND ci.study_form = #{entity.studyForm}</if>
        <if test='entity.level != null'>AND ci.level = #{entity.level}</if>
        <if test='entity.teachingPointName != null'>AND tpi.teaching_point_name = #{entity.teachingPointName}</if>
        <if test='entity.className != null'>AND ci.class_name = #{entity.className}</if>
        <if test='entity.idNumber != null'>AND ss.id_number = #{entity.idNumber}</if>
        <if test='entity.studentNumber != null'>AND ss.student_number = #{entity.studentNumber}</if>

        <if test='entity.name != null'>AND pi.name = #{entity.name}</if>

    </sql>


    <select id="selectCourseStudentsInfo"
            resultType="com.scnujxjy.backendpoint.model.vo.course_learning.CourseLearningStudentInfoVO">
        SELECT cl.id AS course_id, ss.grade, ci.college, ci.major_name, ci.study_form, ci.`level`, tpi.teaching_point_name,
        ci.class_name, ss.id_number, ss.student_number, pi.`name`
        <include refid="courseLearningStudentsInfoJoin" />
        WHERE
        1=1
        <include refid="courseStudentInfoFilter" />
    </select>


    <select id="selectCountCourseStudentsInfo"
            resultType="java.lang.Long">
        SELECT COUNT(*)
        <include refid="courseLearningStudentsInfoJoin" />
        WHERE
        1=1
        <include refid="courseStudentInfoFilter" />
    </select>
    <select id="selectCourseLearningDataWithoutPaging"
            resultType="com.scnujxjy.backendpoint.model.vo.course_learning.CourseLearningVO">
        SELECT
        cl.id,
        cl.grade,
        cl.course_name,
        cl.course_type,
        cl.course_description,
        cl.course_cover_url,
        cl.default_main_teacher_username,
        cl.course_identifier,
        cl.valid,
        cl.created_time,
        cl.updated_time,
        ti.name AS default_main_teacher_name,
        GROUP_CONCAT(DISTINCT ci.class_name) AS classNames,
        COALESCE(
        MIN(CASE WHEN ss.start_time > NOW() THEN ss.start_time END),
        MAX(CASE WHEN NOW() > ss.start_time  THEN ss.start_time END)
        ) AS recent_course_schedule_time
        <include refid="commonJoin" />
        WHERE
        1=1
        <include refid="commonFilters" />
        GROUP BY
        cl.id, ci.grade, cl.course_name, cl.course_type, cl.course_description,
        cl.course_cover_url, cl.default_main_teacher_username, cl.course_identifier,
        cl.valid, cl.created_time, cl.updated_time, ti.name
        ORDER BY
        cl.created_time DESC
    </select>
    <select id="selectCourseRetakeStudentsInfo"
            resultType="com.scnujxjy.backendpoint.model.vo.course_learning.CourseLearningStudentInfoVO">
        SELECT cl.id AS course_id, ss.grade, ci.college, ci.major_name, ci.study_form, ci.`level`, tpi.teaching_point_name,
        ci.class_name, ss.id_number, ss.student_number, pi.`name`
        <include refid="courseLearningRetakeStudentsInfoJoin" />
        WHERE
        1=1
        <include refid="courseStudentInfoFilter" />
    </select>


    <sql id="commonCourseScheduleJoin">
        FROM
        courses_learning cl
        INNER JOIN
        sections ss1 ON cl.id = ss1.course_id
        INNER JOIN
        courses_class_mapping ccm ON cl.id = ccm.course_id
        INNER JOIN
        class_information ci ON ccm.class_identifier = ci.class_identifier
        INNER JOIN
        teacher_information ti ON ss1.main_teacher_username = ti.teacher_username
        INNER JOIN student_status ss ON ss.class_identifier=ci.class_identifier
        INNER JOIN personal_info pi ON pi.grade=ss.grade AND pi.id_number=ss.id_number
        INNER JOIN teaching_point_information tpi
        ON REGEXP_REPLACE(ci.class_name, '\\d', '') = tpi.alias
        LEFT JOIN
        live_resources lr ON cl.id=lr.course_id AND lr.section_id IS NULL
    </sql>

    <sql id="commonCourseScheduleFilters">
        AND ss1.content_type != #{specialNodeType}
        <if test='entity.courseId != null'>AND cl.id = #{entity.courseId}</if>

        <if test='entity.grade != null'>AND ci.grade = #{entity.grade}</if>
        <if test='entity.college != null'>AND ci.college = #{entity.college}</if>
        <if test='entity.majorName != null'>AND ci.major_name = #{entity.majorName}</if>
        <if test='entity.studyForm != null'>AND ci.study_form = #{entity.studyForm}</if>
        <if test='entity.className != null'>AND ci.class_name = #{entity.className}</if>
        <if test='entity.level != null'>AND ci.level = #{entity.level}</if>
        <if test='entity.courseName != null'>AND cl.course_name = #{entity.courseName}</if>
        <if test='entity.courseType != null'>AND cl.course_type = #{entity.courseType}</if>
        <if test='entity.teacherInfo != null and entity.teacherInfo.teacherName != null'>AND ti.name = #{entity.teacherInfo.teacherName}</if>
        <if test='entity.teacherInfo != null and entity.teacherInfo.teacherUsername != null'>AND cl.default_main_teacher_username = #{entity.teacherInfo.teacherUsername}</if>

        <if test='entity.startTime != null'>AND ss1.start_time >= #{entity.startTime}</if>
        <if test='entity.deadLine != null'>AND #{entity.deadLine} >= ss1.start_time</if>
        <if test='entity.teachingPointName != null'>AND tpi.teaching_point_name = #{entity.teachingPointName}</if>
    </sql>

    <select id="selectCoursesScheduleInfo"
            resultType="com.scnujxjy.backendpoint.model.vo.course_learning.CourseScheduleVO">
        select cl.id AS course_id, ci.grade, ci.college, ci.major_name, ci.level, ci.study_form,
               tpi.teaching_point_name, ci.class_name, cl.course_name, cl.course_type,
               ss1.start_time, ss1.deadline, lr.channel_id, COUNT(ss.id) AS total_students
        <include refid="commonCourseScheduleJoin" />
        WHERE
        1=1
        <include refid="commonCourseScheduleFilters" />
        GROUP BY
        cl.id,
        ci.grade,
        ci.college,
        ci.major_name,
        ci.level,
        ci.study_form,
        tpi.teaching_point_name,
        ci.class_name,
        cl.course_name,
        cl.course_type,
        ss1.start_time,
        ss1.deadline,
        lr.channel_id
        ORDER BY
        ci.grade, ci.college, ci.major_name, ci.level, ci.study_form, cl.course_name, ss1.start_time DESC
        LIMIT
        #{pageNumber}, #{pageSize}
    </select>
    <select id="selectCoursesScheduleInfoCount" resultType="java.lang.Long">
        select COUNT(*)
        FROM (
        select cl.id AS course_id, ci.grade, ci.college, ci.major_name, ci.level, ci.study_form,
        tpi.teaching_point_name, ci.class_name, cl.course_name, cl.course_type,
        ss1.start_time, ss1.deadline, lr.channel_id, COUNT(ss.id) AS total_students
        <include refid="commonCourseScheduleJoin" />
        WHERE
        1=1
        <include refid="commonCourseScheduleFilters" />
        GROUP BY
        cl.id,
        ci.grade,
        ci.college,
        ci.major_name,
        ci.level,
        ci.study_form,
        tpi.teaching_point_name,
        ci.class_name,
        cl.course_name,
        cl.course_type,
        ss1.start_time,
        ss1.deadline,
        lr.channel_id
        ) AS subquery
    </select>

<!--    SELECT cl.id AS course_id, ss.grade, ci.college, ci.major_name, ci.study_form, ci.`level`, tpi.teaching_point_name,
        ci.class_name, ss.id_number, ss.student_number, pi.`name`-->

    <select id="selectCourseStudentsInfoSelectParamsGrades" resultType="java.lang.String">
        SELECT DISTINCT ss.grade
        <include refid="courseLearningStudentsInfoJoin" />
        WHERE
        1=1
        <include refid="courseStudentInfoFilter" />
    </select>
    <select id="selectCourseStudentsInfoSelectParamsColleges" resultType="java.lang.String">
        SELECT DISTINCT ci.college
        <include refid="courseLearningStudentsInfoJoin" />
        WHERE
        1=1
        <include refid="courseStudentInfoFilter" />
    </select>
    <select id="selectCourseStudentsInfoSelectParamsMajorNames" resultType="java.lang.String">
        SELECT DISTINCT ci.major_name
        <include refid="courseLearningStudentsInfoJoin" />
        WHERE
        1=1
        <include refid="courseStudentInfoFilter" />
    </select>
    <select id="selectCourseStudentsInfoSelectParamsLevels" resultType="java.lang.String">
        SELECT DISTINCT ci.level
        <include refid="courseLearningStudentsInfoJoin" />
        WHERE
        1=1
        <include refid="courseStudentInfoFilter" />
    </select>
    <select id="selectCourseStudentsInfoSelectParamsStudyForms" resultType="java.lang.String">
        SELECT DISTINCT ci.study_form
        <include refid="courseLearningStudentsInfoJoin" />
        WHERE
        1=1
        <include refid="courseStudentInfoFilter" />
    </select>
    <select id="selectCourseStudentsInfoSelectParamsClassNames" resultType="java.lang.String">
        SELECT DISTINCT ci.class_name
        <include refid="courseLearningStudentsInfoJoin" />
        WHERE
        1=1
        <include refid="courseStudentInfoFilter" />
    </select>
    <select id="selectCourseStudentsInfoSelectParamsTeachingPointNames" resultType="java.lang.String">
        SELECT DISTINCT tpi.teaching_point_name
        <include refid="courseLearningStudentsInfoJoin" />
        WHERE
        1=1
        <include refid="courseStudentInfoFilter" />
    </select>


<!--    SELECT cl.id AS course_id, ss.grade, ci.college, ci.major_name, ci.study_form, ci.`level`, tpi.teaching_point_name,
        ci.class_name, ss.id_number, ss.student_number, pi.`name`-->

    <select id="selectCourseStudentsInfoSelectParamsGradesForRetake" resultType="java.lang.String">
        SELECT DISTINCT ss.grade
        <include refid="courseLearningRetakeStudentsInfoJoin" />
        WHERE
        1=1
        <include refid="courseStudentInfoFilter" />
    </select>
    <select id="selectCourseStudentsInfoSelectParamsCollegesForRetake" resultType="java.lang.String">
        SELECT DISTINCT ci.college
        <include refid="courseLearningRetakeStudentsInfoJoin" />
        WHERE
        1=1
        <include refid="courseStudentInfoFilter" />
    </select>
    <select id="selectCourseStudentsInfoSelectParamsMajorNamesForRetake" resultType="java.lang.String">
        SELECT DISTINCT ci.major_name
        <include refid="courseLearningRetakeStudentsInfoJoin" />
        WHERE
        1=1
        <include refid="courseStudentInfoFilter" />
    </select>
    <select id="selectCourseStudentsInfoSelectParamsLevelsForRetake" resultType="java.lang.String">
        SELECT DISTINCT ci.level
        <include refid="courseLearningRetakeStudentsInfoJoin" />
        WHERE
        1=1
        <include refid="courseStudentInfoFilter" />
    </select>
    <select id="selectCourseStudentsInfoSelectParamsStudyFormsForRetake" resultType="java.lang.String">
        SELECT DISTINCT ci.study_form
        <include refid="courseLearningRetakeStudentsInfoJoin" />
        WHERE
        1=1
        <include refid="courseStudentInfoFilter" />
    </select>
    <select id="selectCourseStudentsInfoSelectParamsClassNamesForRetake" resultType="java.lang.String">
        SELECT DISTINCT ci.class_name
        <include refid="courseLearningRetakeStudentsInfoJoin" />
        WHERE
        1=1
        <include refid="courseStudentInfoFilter" />
    </select>
    <select id="selectCourseStudentsInfoSelectParamsTeachingPointNamesForRetake" resultType="java.lang.String">
        SELECT DISTINCT tpi.teaching_point_name
        <include refid="courseLearningRetakeStudentsInfoJoin" />
        WHERE
        1=1
        <include refid="courseStudentInfoFilter" />
    </select>
    <select id="selectCourseLearningDataSelectParamsGrades" resultType="java.lang.String">
        SELECT
        DISTINCT cl.grade
        <include refid="commonJoin" />
        WHERE
        1=1
        <include refid="commonFilters" />
    </select>
    <select id="selectCourseLearningDataSelectParamsColleges" resultType="java.lang.String">
        SELECT
        DISTINCT ci.college
        <include refid="commonJoin" />
        WHERE
        1=1
        <include refid="commonFilters" />
    </select>
    <select id="selectCourseLearningDataSelectParamsMajorNames" resultType="java.lang.String">
        SELECT
        DISTINCT ci.major_name
        <include refid="commonJoin" />
        WHERE
        1=1
        <include refid="commonFilters" />
    </select>
    <select id="selectCourseLearningDataSelectParamsStudyForms" resultType="java.lang.String">
        SELECT
        DISTINCT ci.study_form
        <include refid="commonJoin" />
        WHERE
        1=1
        <include refid="commonFilters" />
    </select>
    <select id="selectCourseLearningDataSelectParamsLevels" resultType="java.lang.String">
        SELECT
        DISTINCT ci.level
        <include refid="commonJoin" />
        WHERE
        1=1
        <include refid="commonFilters" />
    </select>
    <select id="selectCourseLearningDataSelectParamsTeachingPointNames" resultType="java.lang.String">
        SELECT
        DISTINCT tpi.teaching_point_name
        <include refid="commonJoin" />
        WHERE
        1=1
        <include refid="commonFilters" />
    </select>
    <select id="selectCourseLearningDataSelectParamsClassNames" resultType="java.lang.String">
        SELECT
        DISTINCT ci.class_name
        <include refid="commonJoin" />
        WHERE
        1=1
        <include refid="commonFilters" />
    </select>
    <select id="selectCourseLearningDataSelectParamsCourseNames" resultType="java.lang.String">
        SELECT
        DISTINCT cl.course_name
        <include refid="commonJoin" />
        WHERE
        1=1
        <include refid="commonFilters" />
    </select>


</mapper>
